version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks: [internal]

  redis:
    image: redis:7
    restart: unless-stopped
    networks: [internal]

  backend:
    build: ./backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-app_db}
      REDIS_URL: redis://redis:6379/0
      RUST_LOG: ${RUST_LOG:-info}
    ports:
      - "8080:8080"
    networks: [internal]

  ai_worker:
    build: ./ai_worker
    depends_on:
      - backend
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY:-changeme}
      BACKEND_INTERNAL_URL: http://backend:8080
    ports:
      - "8000:8000"
    networks: [internal]

  frontend:
    build: ./frontend
    depends_on:
      - backend
    environment:
      VITE_API_URL: ${VITE_API_URL:-https://your.domain/api}
    ports:
      - "3000:3000"
    networks: [internal]

  nginx:
    image: nginx:1.25
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    networks: [internal]

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks: [internal]

  grafana:
    image: grafana/grafana:10.4.1
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks: [internal]

networks:
  internal:
    driver: bridge 